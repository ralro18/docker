name: server
services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Mexico_City
    volumes:
      - /apps/docker/sonarr/data:/config
      - /media/series:/media #optional
      - /mnt:/data #optional
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Mexico_City
    volumes:
      - /apps/docker/radar:/config
      - /media/pelis:/media #optional
      - /mnt:/data #optional
    ports:
      - 7878:7878
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Mexico_City
    volumes:
      - /apps/docker/prowlarr/data:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Mexico_City
    devices:
      - /dev/dri/card1:/dev/dri/card1
      - /dev/dri/renderD128:/dev/dri/renderD128
    ports:
      - 8096:8096
      - 8920:8920
      - 1900:1900
      - 7359:7359
    volumes:
      - /apps/docker/jelly:/config
      - /apps/docker/jelly:/cache
      - type: bind
        source: /media
        target: /media
        read_only: true
    restart: unless-stopped

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Mexico_City
    ports:
      - 8191:8191
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9443:9443
    volumes:
      - /apps/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  qBittorrent:
    image: binhex/arch-qbittorrentvpn:latest
    container_name: qbt
    ports:
      - 8080:8080
      - 8118:8118
      - 9118:9118
      - 58946:58946
      - 58946:58946/udp
    volumes:
      - /mnt:/data
      - /apps/docker/qbt:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VPN_ENABLED=yes
      - VPN_USER=***
      - VPN_PASS=***
      - VPN_PROV=custom
      - VPN_CLIENT=openvpn
      - ENABLE_STARTUP_SCRIPTS=no
      - ENABLE_PRIVOXY=yes
      - STRICT_PORT_FORWARD=yes
      - USERSPACE_WIREGUARD=no
      - ENABLE_SOCKS=yes
      - SOCKS_USER=admin
      - SOCKS_PASS=socks
      - LAN_NETWORK=192.168.69.0/24
      - NAME_SERVERS=84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1
      - VPN_INPUT_PORTS=1234
      - VPN_OUTPUT_PORTS=5678
      - DEBUG=false
      - WEBUI_PORT=8080
      - UMASK=000
      - PUID=0
      - PGID=0
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 192.168.69.12:53:53/tcp
      - 192.168.69.12:53:53/udp
      - 8081:80/tcp
    environment:
      TZ: America/Mexico_City
      WEBPASSWORD: admin
    volumes:
      - /apps/docker/pihole/pihole:/etc/pihole
      - /apps/docker/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    restart: unless-stopped

  nginxproxymanager:
    image: jc21/nginx-proxy-manager:latest
    container_name: ngx
    restart: unless-stopped
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - /apps/docker/ngx/data:/data
      - /apps/docker/ngx/letsencrypt:/etc/letsencrypt
